{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/pages/_app.js"],"sourcesContent":["// pages/_app.js\r\nimport { CssBaseline, ThemeProvider, createTheme } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#003366', // Azul escuro\r\n    },\r\n  },\r\n});\r\n\r\nconst MyApp = ({ Component, pageProps }) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Component {...pageProps} />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default MyApp;\r\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;;AAEhB;AADA;AAAA;AAAA;;;;AAGA,MAAM,QAAQ,CAAA,GAAA,6LAAA,CAAA,cAAW,AAAD,EAAE;IACxB,SAAS;QACP,SAAS;YACP,MAAM;QACR;IACF;AACF;AAEA,MAAM,QAAQ,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE;IACrC,qBACE,uIAAC,iMAAA,CAAA,gBAAa;QAAC,OAAO;;0BACpB,uIAAC,kMAAA,CAAA,cAAW;;;;;0BACZ,uIAAC;gBAAW,GAAG,SAAS;;;;;;;;;;;;AAG9B;uCAEe"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/pages/cadastro-cliente.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Typography, Container, Box, FormControlLabel, Checkbox, MenuItem, Select, InputLabel, FormControl } from '@mui/material';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useRouter } from 'next/router';\r\n\r\n// Marcas e modelos simulados (seriam puxados do banco de dados em um caso real)\r\nconst carBrands = {\r\n  'Toyota': ['Corolla', 'Hilux', 'Yaris'],\r\n  'Ford': ['Fiesta', 'Focus', 'Mustang'],\r\n  'Honda': ['Civic', 'Fit', 'HR-V'],\r\n  // Adicione outras marcas e modelos conforme necessário\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  name: Yup.string().required('Nome é obrigatório'),\r\n  cpf: Yup.string().required('CPF é obrigatório'),\r\n  email: Yup.string().email('E-mail inválido').required('E-mail é obrigatório'),\r\n  phone: Yup.string().required('Telefone é obrigatório'),\r\n});\r\n\r\nconst CadastroCliente = () => {\r\n  const router = useRouter();\r\n  const [vehicles, setVehicles] = useState([{ type: '', brand: '', model: '', year: '', plate: '' }]);\r\n  const [addMoreVehicles, setAddMoreVehicles] = useState(false);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      cpf: '',\r\n      email: '',\r\n      phone: '',\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      console.log({ ...values, vehicles });\r\n    },\r\n  });\r\n\r\n  const handleCancel = () => {\r\n    router.push('/'); // Retorna para a tela inicial\r\n  };\r\n\r\n  const handleVehicleChange = (index, event) => {\r\n    const { name, value } = event.target;\r\n    const newVehicles = [...vehicles];\r\n    newVehicles[index][name] = value;\r\n    setVehicles(newVehicles);\r\n  };\r\n\r\n  const handleAddVehicle = () => {\r\n    setVehicles([...vehicles, { type: '', brand: '', model: '', year: '', plate: '' }]);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" style={{ padding: '40px 20px' }}>\r\n      <Typography variant=\"h4\" gutterBottom style={{ fontWeight: 'bold', color: '#003366', marginBottom: '30px' }}>\r\n        Cadastro de Cliente\r\n      </Typography>\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        {/* Informações do cliente */}\r\n        <Box mb={3}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Nome\"\r\n            variant=\"outlined\"\r\n            name=\"name\"\r\n            value={formik.values.name}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.name && Boolean(formik.errors.name)}\r\n            helperText={formik.touched.name && formik.errors.name}\r\n          />\r\n        </Box>\r\n        <Box mb={3}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"CPF\"\r\n            variant=\"outlined\"\r\n            name=\"cpf\"\r\n            value={formik.values.cpf}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.cpf && Boolean(formik.errors.cpf)}\r\n            helperText={formik.touched.cpf && formik.errors.cpf}\r\n          />\r\n        </Box>\r\n        <Box mb={3}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"E-mail\"\r\n            variant=\"outlined\"\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n        </Box>\r\n        <Box mb={3}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Telefone\"\r\n            variant=\"outlined\"\r\n            name=\"phone\"\r\n            value={formik.values.phone}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.phone && Boolean(formik.errors.phone)}\r\n            helperText={formik.touched.phone && formik.errors.phone}\r\n          />\r\n        </Box>\r\n\r\n        {/* Informações dos veículos */}\r\n        {vehicles.map((vehicle, index) => (\r\n          <Box key={index} mb={3} border={1} borderRadius={5} padding={2} marginBottom={2}>\r\n            <Typography variant=\"h6\">Veículo {index + 1}</Typography>\r\n\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={vehicle.type === 'car'}\r\n                  onChange={() => handleVehicleChange(index, { target: { name: 'type', value: 'car' } })}\r\n                />\r\n              }\r\n              label=\"Carro\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={vehicle.type === 'motorcycle'}\r\n                  onChange={() => handleVehicleChange(index, { target: { name: 'type', value: 'motorcycle' } })}\r\n                />\r\n              }\r\n              label=\"Moto\"\r\n            />\r\n\r\n            {/* Marca */}\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel id={`brand-label-${index}`}>Marca</InputLabel>\r\n              <Select\r\n                labelId={`brand-label-${index}`}\r\n                name=\"brand\"\r\n                value={vehicle.brand}\r\n                onChange={(e) => handleVehicleChange(index, e)}\r\n              >\r\n                {Object.keys(carBrands).map((brand) => (\r\n                  <MenuItem key={brand} value={brand}>\r\n                    {brand}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            {/* Modelo */}\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel id={`model-label-${index}`}>Modelo</InputLabel>\r\n              <Select\r\n                labelId={`model-label-${index}`}\r\n                name=\"model\"\r\n                value={vehicle.model}\r\n                onChange={(e) => handleVehicleChange(index, e)}\r\n              >\r\n                {carBrands[vehicle.brand]?.map((model) => (\r\n                  <MenuItem key={model} value={model}>\r\n                    {model}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            {/* Ano */}\r\n            <TextField\r\n              fullWidth\r\n              label=\"Ano\"\r\n              name=\"year\"\r\n              type=\"number\"\r\n              value={vehicle.year}\r\n              onChange={(e) => handleVehicleChange(index, e)}\r\n              inputProps={{ min: 1950, max: 2100 }}\r\n            />\r\n\r\n            {/* Placa */}\r\n            <TextField\r\n              fullWidth\r\n              label=\"Placa\"\r\n              name=\"plate\"\r\n              value={vehicle.plate}\r\n              onChange={(e) => handleVehicleChange(index, e)}\r\n              margin=\"normal\"\r\n            />\r\n          </Box>\r\n        ))}\r\n\r\n        {/* Checkbox para adicionar outro veículo */}\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={addMoreVehicles}\r\n              onChange={(e) => setAddMoreVehicles(e.target.checked)}\r\n            />\r\n          }\r\n          label=\"Adicionar outro veículo\"\r\n        />\r\n        {addMoreVehicles && (\r\n          <Button variant=\"outlined\" onClick={handleAddVehicle}>\r\n            Adicionar Veículo\r\n          </Button>\r\n        )}\r\n\r\n        {/* Botões */}\r\n        <Box mt={4} display=\"flex\" justifyContent=\"space-between\">\r\n          <Button variant=\"outlined\" color=\"secondary\" onClick={handleCancel}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Cadastrar Cliente\r\n          </Button>\r\n        </Box>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CadastroCliente;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 567, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}